import { type MaybeRef, type MaybeRefOrGetter } from 'vue';
export type ItemPaginationSettings = {
    itemsPerPage: MaybeRef<number>;
    onPageChange?: () => void;
};
/**
 * Composable that provides pagination functionality for an array of items,
 * returning the paginated items based on the current page.
 * @param {MaybeRefOrGetter<T[]>} items - The array of items to paginate.
 * @param {ItemPaginationSettings} settings - The pagination settings, including the number of items per
 * page and an optional onPageChange callback.
 *
 * @example
 * const { currentPage, pageCount, paginatedItems, prev, next } = useItemPagination(items, { itemsPerPage: 10 });
 */
export declare function useItemPagination<T>(items: MaybeRefOrGetter<T[]>, settings: ItemPaginationSettings): {
    currentPage: import("vue").Ref<number, number>;
    pageCount: import("vue").ComputedRef<number>;
    paginatedItems: import("vue").ComputedRef<T[]>;
    prev: () => void;
    next: () => void;
};
//# sourceMappingURL=useItemPagination.d.ts.map