import { type PropType } from 'vue';
type NotificationKind = 'info' | 'warning' | 'error' | 'success';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    kind: {
        type: PropType<NotificationKind>;
        required: true;
    };
    title: {
        type: StringConstructor;
        default: undefined;
    };
    description: {
        type: StringConstructor;
        default: undefined;
    };
    showCloseButton: {
        type: BooleanConstructor;
        default: boolean;
    };
    primaryButtonLabel: {
        type: StringConstructor;
        default: undefined;
    };
    secondaryButtonLabel: {
        type: StringConstructor;
        default: undefined;
    };
    showDetailsLabel: {
        type: StringConstructor;
        default: string;
    };
    closeAriaLabel: {
        type: StringConstructor;
        default: string;
    };
}>, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    close: (...args: any[]) => void;
    primaryClick: (...args: any[]) => void;
    secondaryClick: (...args: any[]) => void;
}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    kind: {
        type: PropType<NotificationKind>;
        required: true;
    };
    title: {
        type: StringConstructor;
        default: undefined;
    };
    description: {
        type: StringConstructor;
        default: undefined;
    };
    showCloseButton: {
        type: BooleanConstructor;
        default: boolean;
    };
    primaryButtonLabel: {
        type: StringConstructor;
        default: undefined;
    };
    secondaryButtonLabel: {
        type: StringConstructor;
        default: undefined;
    };
    showDetailsLabel: {
        type: StringConstructor;
        default: string;
    };
    closeAriaLabel: {
        type: StringConstructor;
        default: string;
    };
}>> & Readonly<{
    onClose?: ((...args: any[]) => any) | undefined;
    onPrimaryClick?: ((...args: any[]) => any) | undefined;
    onSecondaryClick?: ((...args: any[]) => any) | undefined;
}>, {
    title: string;
    description: string;
    showCloseButton: boolean;
    primaryButtonLabel: string;
    secondaryButtonLabel: string;
    showDetailsLabel: string;
    closeAriaLabel: string;
}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>, {
    title?(_: {}): any;
    description?(_: {}): any;
    details?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
//# sourceMappingURL=NeInlineNotification.vue.d.ts.map